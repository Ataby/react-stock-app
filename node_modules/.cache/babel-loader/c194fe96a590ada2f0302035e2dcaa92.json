{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { fetchStart, loginSuccess, logoutSuccess, registerSuccess, fetchFail } from \"../features/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toastErrorNotify, toastSuccessNotify } from \"../helper/ToastNotify\";\n\nconst useAuthCalls = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const BASE_URL = \"https://10001.fullstack.clarusway.com/\";\n\n  const login = async userInfo => {\n    dispatch(fetchStart());\n\n    try {\n      const {\n        data\n      } = await axios.post(`${BASE_URL}account/auth/login/`, userInfo);\n      dispatch(loginSuccess(data));\n      toastSuccessNotify(\"Login performed\");\n      navigate(\"/stock\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Login can not be performed\");\n    }\n  };\n\n  const logout = async () => {\n    dispatch(fetchStart());\n\n    try {\n      await axios.post(`${BASE_URL}account/auth/logout/`);\n      dispatch(logoutSuccess());\n      toastSuccessNotify(\"Logout performed\");\n      navigate(\"/\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Logout can not be performed\");\n    }\n  };\n\n  const register = async userInfo => {\n    dispatch(fetchStart());\n\n    try {\n      const {\n        data\n      } = await axios.post(`${BASE_URL}account/register/`, userInfo);\n      dispatch(registerSuccess(data));\n      toastSuccessNotify(\"Register performed\");\n      navigate(\"/stock\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Register can not be performed\");\n    }\n  };\n\n  return {\n    login,\n    logout,\n    register\n  };\n};\n\n_s(useAuthCalls, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\nexport default useAuthCalls;","map":{"version":3,"names":["useDispatch","axios","fetchStart","loginSuccess","logoutSuccess","registerSuccess","fetchFail","useNavigate","toastErrorNotify","toastSuccessNotify","useAuthCalls","dispatch","navigate","BASE_URL","login","userInfo","data","post","err","logout","register"],"sources":["/Users/macbookair/Desktop/stock-app/stock_app/src/hooks/useAuthCalls.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  fetchStart,\n  loginSuccess,\n  logoutSuccess,\n  registerSuccess,\n  fetchFail,\n} from \"../features/authSlice\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { toastErrorNotify, toastSuccessNotify } from \"../helper/ToastNotify\";\n\nconst useAuthCalls = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const BASE_URL = \"https://10001.fullstack.clarusway.com/\";\n\n  const login = async (userInfo) => {\n    dispatch(fetchStart());\n    try {\n      const { data } = await axios.post(\n        `${BASE_URL}account/auth/login/`,\n        userInfo\n      );\n\n      dispatch(loginSuccess(data));\n      toastSuccessNotify(\"Login performed\");\n      navigate(\"/stock\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Login can not be performed\");\n    }\n  };\n\n  const logout = async () => {\n    dispatch(fetchStart());\n    try {\n      await axios.post(`${BASE_URL}account/auth/logout/`);\n      dispatch(logoutSuccess());\n      toastSuccessNotify(\"Logout performed\");\n      navigate(\"/\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Logout can not be performed\");\n    }\n  };\n\n  const register = async (userInfo) => {\n    dispatch(fetchStart());\n    try {\n      const { data } = await axios.post(\n        `${BASE_URL}account/register/`,\n        userInfo\n      );\n      dispatch(registerSuccess(data));\n      toastSuccessNotify(\"Register performed\");\n      navigate(\"/stock\");\n    } catch (err) {\n      dispatch(fetchFail());\n      toastErrorNotify(\"Register can not be performed\");\n    }\n  };\n\n  return {\n    login,\n    logout,\n    register,\n  };\n};\n\nexport default useAuthCalls;\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,eAJF,EAKEC,SALF,QAMO,uBANP;AAQA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,uBAArD;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,QAAQ,GAAGL,WAAW,EAA5B;EAEA,MAAMM,QAAQ,GAAG,wCAAjB;;EAEA,MAAMC,KAAK,GAAG,MAAOC,QAAP,IAAoB;IAChCJ,QAAQ,CAACT,UAAU,EAAX,CAAR;;IACA,IAAI;MACF,MAAM;QAAEc;MAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CACpB,GAAEJ,QAAS,qBADS,EAErBE,QAFqB,CAAvB;MAKAJ,QAAQ,CAACR,YAAY,CAACa,IAAD,CAAb,CAAR;MACAP,kBAAkB,CAAC,iBAAD,CAAlB;MACAG,QAAQ,CAAC,QAAD,CAAR;IACD,CATD,CASE,OAAOM,GAAP,EAAY;MACZP,QAAQ,CAACL,SAAS,EAAV,CAAR;MACAE,gBAAgB,CAAC,4BAAD,CAAhB;IACD;EACF,CAfD;;EAiBA,MAAMW,MAAM,GAAG,YAAY;IACzBR,QAAQ,CAACT,UAAU,EAAX,CAAR;;IACA,IAAI;MACF,MAAMD,KAAK,CAACgB,IAAN,CAAY,GAAEJ,QAAS,sBAAvB,CAAN;MACAF,QAAQ,CAACP,aAAa,EAAd,CAAR;MACAK,kBAAkB,CAAC,kBAAD,CAAlB;MACAG,QAAQ,CAAC,GAAD,CAAR;IACD,CALD,CAKE,OAAOM,GAAP,EAAY;MACZP,QAAQ,CAACL,SAAS,EAAV,CAAR;MACAE,gBAAgB,CAAC,6BAAD,CAAhB;IACD;EACF,CAXD;;EAaA,MAAMY,QAAQ,GAAG,MAAOL,QAAP,IAAoB;IACnCJ,QAAQ,CAACT,UAAU,EAAX,CAAR;;IACA,IAAI;MACF,MAAM;QAAEc;MAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CACpB,GAAEJ,QAAS,mBADS,EAErBE,QAFqB,CAAvB;MAIAJ,QAAQ,CAACN,eAAe,CAACW,IAAD,CAAhB,CAAR;MACAP,kBAAkB,CAAC,oBAAD,CAAlB;MACAG,QAAQ,CAAC,QAAD,CAAR;IACD,CARD,CAQE,OAAOM,GAAP,EAAY;MACZP,QAAQ,CAACL,SAAS,EAAV,CAAR;MACAE,gBAAgB,CAAC,+BAAD,CAAhB;IACD;EACF,CAdD;;EAgBA,OAAO;IACLM,KADK;IAELK,MAFK;IAGLC;EAHK,CAAP;AAKD,CAzDD;;GAAMV,Y;UACaV,W,EACAO,W;;;AAyDnB,eAAeG,YAAf"},"metadata":{},"sourceType":"module"}