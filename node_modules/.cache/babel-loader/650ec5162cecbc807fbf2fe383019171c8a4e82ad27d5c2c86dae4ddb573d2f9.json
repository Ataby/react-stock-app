{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/stock-app/stock_app/src/components/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { Form } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Please enter valid email\").required(\"Email is mandatory\"),\n  password: Yup.string().min(8, \"Password must have min 8 chars\").max(16, \"Password must have max 16 chars\").matches(/\\d+/, \"Password must have a number\").matches(/[a-z]+/, \"Password must have a lowercase\").matches(/[A-Z]+/, \"Password must have an uppercase\").matches(/[!,?{}><%&$#£+-.]+/, \" Password must have a special char\")\n});\nconst LoginForm = ({\n  values,\n  handleChange,\n  errors,\n  touched,\n  handleBlur\n}) => {\n  _s();\n  const {\n    loading\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        id: \"email\",\n        type: \"email\",\n        variant: \"outlined\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        helperText: touched.email && errors.email,\n        error: touched.email && Boolean(errors.email)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"password\",\n        name: \"password\",\n        id: \"password\",\n        type: \"password\",\n        variant: \"outlined\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        helperText: touched.password && errors.password,\n        error: touched.password && Boolean(errors.password)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        loading: loading,\n        loadingPosition: \"center\",\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"qPH7E8ZBRBZG+ChS5bGqdjAK4Pc=\", false, function () {\n  return [useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Box","TextField","LoadingButton","Form","useSelector","Yup","jsxDEV","_jsxDEV","loginSchema","object","shape","email","string","required","password","min","max","matches","LoginForm","values","handleChange","errors","touched","handleBlur","_s","loading","state","auth","children","sx","display","flexDirection","gap","label","name","id","type","variant","value","onChange","onBlur","helperText","error","Boolean","fileName","_jsxFileName","lineNumber","columnNumber","loadingPosition","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/stock-app/stock_app/src/components/LoginForm.jsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport { Form } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Please enter valid email\")\n    .required(\"Email is mandatory\"),\n  password: Yup.string()\n    .min(8, \"Password must have min 8 chars\")\n    .max(16, \"Password must have max 16 chars\")\n    .matches(/\\d+/, \"Password must have a number\")\n    .matches(/[a-z]+/, \"Password must have a lowercase\")\n    .matches(/[A-Z]+/, \"Password must have an uppercase\")\n    .matches(/[!,?{}><%&$#£+-.]+/, \" Password must have a special char\"),\n});\n\nconst LoginForm = ({ values, handleChange, errors, touched, handleBlur }) => {\n  const { loading } = useSelector((state) => state.auth);\n  return (\n    <Form>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          id=\"email\"\n          type=\"email\"\n          variant=\"outlined\"\n          value={values.email}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          helperText={touched.email && errors.email}\n          error={touched.email && Boolean(errors.email)}\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          id=\"password\"\n          type=\"password\"\n          variant=\"outlined\"\n          value={values.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          helperText={touched.password && errors.password}\n          error={touched.password && Boolean(errors.password)}\n        />\n        <LoadingButton\n          loading={loading}\n          loadingPosition=\"center\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </LoadingButton>\n      </Box>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}